--- rpmbuild/copr_rpmbuild/providers/pypi.py	2023-01-29 11:50:31.641457604 +0800
+++ ../copr_docker/docker/builder/files/pypi.py	2023-03-09 20:31:09.242179260 +0800
@@ -16,7 +16,7 @@
         self.python_versions = source_json["python_versions"] or []
 
     def tool_presence_check(self):
-        if self.spec_generator not in ["pyp2rpm", "pyp2spec"]:
+        if self.spec_generator not in ["pyp2rpm", "pyp2spec", "pyporter"]:
             msg = "Unsupported tool: {0}".format(self.spec_generator)
             raise RuntimeError(msg)
 
@@ -31,8 +31,10 @@
 
         if self.spec_generator == "pyp2rpm":
             self._produce_srpm_pyp2rpm()
-        else:
+        elif self.spec_generator == "pyp2spec":
             self._produce_srpm_pyp2spec()
+        else:
+            self._produce_srpm_pyporter()
 
     def _produce_srpm_pyp2rpm(self):
         cmd = ["pyp2rpm", self.pypi_package_name, "-t", self.spec_template,
@@ -49,6 +51,23 @@
 
         return run_cmd(cmd)
 
+    def _produce_srpm_pyporter(self):
+        spec = "python-{0}.spec".format(self.pypi_package_name)
+        spec = os.path.join(self.resultdir, spec)
+        cmd = ["pyporter", "-s", self.pypi_package_name, "-o", spec, "--mirror", "https://mirrors.aliyun.com/pypi/web"]
+
+        if self.pypi_package_version:
+            cmd += ["-v", self.pypi_package_version]
+
+        try:
+            run_cmd(cmd)
+        except RuntimeError as err:
+            log.error("Unable to generate spec for `%s' using pyporter",
+                      self.pypi_package_name)
+            raise err
+
+        self.build_srpm_from_spec(spec)
+
     def _produce_srpm_pyp2spec(self):
         os.chdir(self.resultdir)
 
