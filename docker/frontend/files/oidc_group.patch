diff --git a/frontend/coprs_frontend/alembic/versions/daa62cd0743d_add_unique_constraint_to_fas_group.py b/frontend/coprs_frontend/alembic/versions/daa62cd0743d_add_unique_constraint_to_fas_group.py
new file mode 100644
index 00000000..7da6fdae
--- /dev/null
+++ b/frontend/coprs_frontend/alembic/versions/daa62cd0743d_add_unique_constraint_to_fas_group.py
@@ -0,0 +1,24 @@
+"""
+add unique constraint to fas_group
+
+Revision ID: daa62cd0743d
+Revises: ba6ac0936bfb
+Create Date: 2023-08-01 09:52:01.522171
+"""
+
+from alembic import op
+
+
+# revision identifiers, used by Alembic.
+revision = 'daa62cd0743d'
+down_revision = 'ba6ac0936bfb'
+branch_labels = None
+depends_on = None
+
+
+def upgrade():
+    op.create_unique_constraint(None, 'group', ['fas_name'])
+
+
+def downgrade():
+    op.drop_constraint(None, 'group', type_='unique')
diff --git a/frontend/coprs_frontend/coprs/models.py b/frontend/coprs_frontend/coprs/models.py
index 038534b4..f33cbede 100644
--- a/frontend/coprs_frontend/coprs/models.py
+++ b/frontend/coprs_frontend/coprs/models.py
@@ -2206,8 +2206,7 @@ class Group(db.Model, helpers.Serializer):
     id = db.Column(db.Integer, primary_key=True)
     name = db.Column(db.String(127))
 
-    # TODO: add unique=True
-    fas_name = db.Column(db.String(127))
+    fas_name = db.Column(db.String(127), unique=True)
 
     @property
     def at_name(self):
diff --git a/frontend/coprs_frontend/coprs/templates/_helpers.html b/frontend/coprs_frontend/coprs/templates/_helpers.html
index 317d82e7..3956dd6f 100644
--- a/frontend/coprs_frontend/coprs/templates/_helpers.html
+++ b/frontend/coprs_frontend/coprs/templates/_helpers.html
@@ -304,7 +304,7 @@
         <span class="badge">{{ g.user.coprs_count }}</span>
         My projects
       </a>
-    {% if config.FAS_LOGIN or config.LDAP_URL %}
+    {% if config.FAS_LOGIN or config.LDAP_URL or config.OIDC_LOGIN %}
       <a href="{{url_for('groups_ns.list_user_groups') }}" class="list-group-item">
         <span class="badge"> {{ user.user_groups|length }} </span>
         My groups
@@ -458,11 +458,6 @@
   {{- copr_url('coprs_ns.copr_package', package.copr, package_name=package.name) -}}
 {% endmacro %}
 
-{%- macro fas_group_href(name) -%}
-https://accounts.fedoraproject.org/group/{{name}}
-{%- endmacro -%}
-
-
 {% macro repo_file_href(copr, repo, arch=None) %}
 {%- if not arch %}
   {{- owner_url('coprs_ns.generate_repo_file',
diff --git a/frontend/coprs_frontend/coprs/templates/coprs/show/group.html b/frontend/coprs_frontend/coprs/templates/coprs/show/group.html
index e7185d45..6679298a 100644
--- a/frontend/coprs_frontend/coprs/templates/coprs/show/group.html
+++ b/frontend/coprs_frontend/coprs/templates/coprs/show/group.html
@@ -1,7 +1,7 @@
 {% extends "coprs/group_show.html" %}
 {% block title %}Project List{% endblock %}
 {% block header %}Project List{% endblock %}
-{% from "_helpers.html" import render_pagination, fas_group_href %}
+{% from "_helpers.html" import render_pagination %}
 {% block breadcrumbs %}
 <ol class="breadcrumb">
   <li>
diff --git a/frontend/coprs_frontend/coprs/templates/groups/user_fas_groups.html b/frontend/coprs_frontend/coprs/templates/groups/user_fas_groups.html
index afb4abae..e35192f4 100644
--- a/frontend/coprs_frontend/coprs/templates/groups/user_fas_groups.html
+++ b/frontend/coprs_frontend/coprs/templates/groups/user_fas_groups.html
@@ -1,5 +1,5 @@
 {% extends "layout.html" %}
-{% from "_helpers.html" import fas_group_href, initialize_datatables %}
+{% from "_helpers.html" import initialize_datatables %}
 {% block title %}Add a Group{% endblock %}
 {% block header %}Add a Group{% endblock %}
 
@@ -37,7 +37,7 @@
     <tbody>
     {% for team in teams %}
       <tr>
-        <td><a href="{{ fas_group_href(team) }}">
+        <td><a href="{{ config.GROUP_INFO.link.format(name=team) }}">
           {{ team }}
         </a></td>
         <td>
diff --git a/frontend/coprs_frontend/coprs/views/groups_ns/groups_general.py b/frontend/coprs_frontend/coprs/views/groups_ns/groups_general.py
index 43194250..7ef09c70 100644
--- a/frontend/coprs_frontend/coprs/views/groups_ns/groups_general.py
+++ b/frontend/coprs_frontend/coprs/views/groups_ns/groups_general.py
@@ -10,6 +10,7 @@ from coprs.logic.complex_logic import ComplexLogic
 from coprs.logic.coprs_logic import CoprsLogic, PinnedCoprsLogic
 from coprs.logic.users_logic import UsersLogic
 from coprs import app
+from coprs.oidc import oidc_enabled
 
 from ... import db
 from ..misc import login_required
@@ -21,6 +22,15 @@ from . import groups_ns
 @groups_ns.route("/activate/<fas_group>", methods=["GET", "POST"])
 @login_required
 def activate_group(fas_group):
+    msg_fmt = "Group {} is activated in the system under the alias {}"
+
+    group = UsersLogic.get_group_by_fas_name(fas_group).first()
+    if group:
+         # can't have more than one alias for a group
+        flask.flash(msg_fmt.format(group.fas_name, group.name), "success")
+        return flask.redirect(url_for(
+            "groups_ns.list_projects_by_group", group_name=group.name))
+
     form = ActivateFasGroupForm()
 
     if form.validate_on_submit():
@@ -31,22 +41,18 @@ def activate_group(fas_group):
 
         if fas_group not in flask.g.user.user_teams:
             raise InsufficientRightsException(
-                "User '{}' doesn't have access to fas group {}"
+                "User '{}' doesn't have access to group {}"
                 .format(flask.g.user.username, fas_group))
 
         alias = form.name.data
-        group = UsersLogic.get_group_by_fas_name_or_create(
-            fas_group, alias)
+        group = UsersLogic.create_group_by_fas_name(fas_group, alias)
 
         db.session.add(group)
         db.session.commit()
 
-        flask.flash(
-            "FAS group {} is activated in the Copr under the alias {} "
-            .format(fas_group, alias)
-        )
+        flask.flash(msg_fmt.format(group.fas_name, group.name), "success")
         return flask.redirect(url_for(
-            "groups_ns.list_projects_by_group", group_name=alias))
+            "groups_ns.list_projects_by_group", group_name=group.name))
 
     else:
         return flask.render_template(
@@ -85,7 +91,7 @@ def list_projects_by_group(group_name, page=1):
 @groups_ns.route("/list/my")
 @login_required
 def list_user_groups():
-    if not (app.config['FAS_LOGIN'] or app.config['LDAP_URL']):
+    if not (app.config['FAS_LOGIN'] or app.config['LDAP_URL'] or oidc_enabled(app.config)):
         raise ObjectNotFound("Fedora Accounts or LDAP groups not enabled")
 
     teams = flask.g.user.user_teams
