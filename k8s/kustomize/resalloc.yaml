apiVersion: apps/v1
kind: Deployment
metadata:
  name: copr-resalloc
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      component: copr-resalloc
  template:
    metadata:
      labels:
        component: copr-resalloc
    spec:
      nodeSelector:
        usage: test
      serviceAccountName: resalloc
      containers:
        - image: pkking/copr_resalloc@sha256:a0cab203c95ebad2c54a3b5ed9c3080566f5163a244df53bee1a02c6a344f213
          imagePullPolicy: IfNotPresent
          name: resalloc
          livenessProbe:
            tcpSocket:
              port: 49100
            initialDelaySeconds: 120
            timeoutSeconds: 5
          readinessProbe:
            tcpSocket:
              port: 49100
            initialDelaySeconds: 5
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 500m
              memory: 500Mi
          ports:
            - containerPort: 49100
              protocol: TCP
          command:
            - /bin/sh
            - -c
            - |
              cp /home/resalloc/provision/local-new-x86-ro /home/resalloc/provision/local-new-x86;
              cp /home/resalloc/provision/local-new-aarch64-ro /home/resalloc/provision/local-new-aarch64;
              cp /home/resalloc/provision/local-delete-ro /home/resalloc/provision/local-delete;
              cp /root/.ssh/id_rsa-ro /root/.ssh/id_rsa;
              chmod +x /home/resalloc/provision/local-*;
              chmod 0400 /root/.ssh/id_rsa;
              exec /usr/bin/resalloc-server;
          volumeMounts:
            - mountPath: /etc/resallocserver/pools.yaml
              name: copr-resalloc
              subPath: pools.yaml
            - mountPath: /etc/resallocserver/server.yaml
              name: copr-resalloc
              subPath: server.yaml
            - mountPath: /home/resalloc/provision/local-new-x86-ro
              name: copr-resalloc
              subPath: local-new-x86
            - mountPath: /home/resalloc/provision/local-new-aarch64-ro
              name: copr-resalloc
              subPath: local-new-aarch64
            - mountPath: /home/resalloc/provision/local-delete-ro
              name: copr-resalloc
              subPath: local-delete
            - mountPath: /root/.ssh/builder_config
              name: copr-resalloc
              subPath: builder_config
            - mountPath: /root/.ssh/id_rsa-ro
              name: copr-resalloc
              subPath: id_rsa
            - name: resalloc-data
              mountPath: /var/lib/resallocserver
            - name: resalloc-data
              mountPath: /var/log/resallocserver
      volumes:
        - name: copr-resalloc
          configMap:
            name: copr-resalloc
        - name: resalloc-data
          persistentVolumeClaim:
            claimName: resalloc-data

---
apiVersion: v1
kind: Service
metadata:
  name: copr-resalloc
spec:
  ports:
    - name: resalloc
      port: 49100
      protocol: TCP
      targetPort: 49100
  selector:
    component: copr-resalloc
  type: ClusterIP
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: fedora-copr
  name: builder-manage
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["create", "delete", "list", "get", "watch"]
- apiGroups: [""] # "" indicates the core API group
  resources: ["persistentvolumeclaims"]
  verbs: ["create", "delete"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: resalloc
  namespace: fedora-copr
---
apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "jane" to read pods in the "default" namespace.
# You need to already have a Role named "pod-reader" in that namespace.
kind: RoleBinding
metadata:
  name: resalloc-role-binding
  namespace: fedora-copr
subjects:
# You can specify more than one "subject"
- kind: ServiceAccount
  name: resalloc
  namespace: fedora-copr
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name: builder-manage # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: resalloc-data
  labels:
    failure-domain.beta.kubernetes.io/zone: cn-north-4a
  annotations:
    everest.io/disk-volume-type: SSD
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
